SubDir HAIKU_TOP src system boot platform bebox ;

#SubDirHdrs $(HAIKU_TOP) headers private kernel boot platform bebox ;
SubDirHdrs $(HAIKU_TOP) headers private kernel platform $(TARGET_BOOT_PLATFORM) ;
SubDirHdrs $(HAIKU_TOP) src add-ons kernel bus_managers fdt ;

SubDirHdrs $(HAIKU_TOP) src system boot arch $(TARGET_KERNEL_ARCH) ;

UseLibraryHeaders [ FDirName libfdt ] ;

UsePrivateHeaders [ FDirName kernel disk_device_manager ] ;
UsePrivateHeaders [ FDirName graphics common ] ;
UsePrivateHeaders [ FDirName graphics vesa ] ;
UsePrivateHeaders [ FDirName storage ] ;
UsePrivateHeaders [ FDirName kernel arch generic ] ;
UsePrivateHeaders [ FDirName kernel boot platform bebox ] ;

{
    local defines = _BOOT_MODE ;

    defines = [ FDefines $(defines) ] ;
    SubDirCcFlags $(defines) -g3 -O0 ;
    SubDirC++Flags $(defines) -fno-rtti -g3 -O0 ;
}

SEARCH_SOURCE += [ FDirName $(HAIKU_TOP) src add-ons accelerants common ] ;

SEARCH on [ FGristFiles $(genericPlatformSources) ]
    = [ FDirName $(HAIKU_TOP) src system boot platform generic ] ;

local platform ;
for platform in [ MultiBootSubDirSetup bebox ] {
	on $(platform) {

		local kernelPlatformSources =
			openfirmware.cpp ;

		# First build the non arch dependent parts
		BootMergeObject boot_platform_bebox_common.o :
		    start.cpp
		    debug.cpp
		    console.cpp
		    serial.cpp
		    devices.cpp
		    keyboard.cpp
		    menu.cpp
		    cpu.cpp
		    video.cpp
			$(kernelPlatformSources)
		    $(genericPlatformSources)
		    :
		    :
		    boot_platform_generic_bebox.a
		    boot_fdt.a
		;

		BootMergeObject boot_platform_bebox.o :
		    : :
		    # must come first to have _start_* at correct locations
		    boot_platform_bebox_$(TARGET_ARCH).o
		    boot_platform_bebox_common.o
		;

		SEARCH on [ FGristFiles $(kernelPlatformSources) ]
			= [ FDirName $(HAIKU_TOP) src system kernel platform u-boot ] ;
	}
}


# Tell the build system to where stage1.bin can be found, so it can be used
# elsewhere.
SEARCH on stage1.bin = $(SUBDIR) ;

SubInclude HAIKU_TOP src system boot platform bebox arch ;
